@use "../_mixins.scss" as mixins;
@use "../_variables.scss" as variables;
@include mixins.resetStyle;

/*
 * 角度の値を保持するCSS変数を定義
 * 対応ブラウザ: https://caniuse.com/?search=%40property
 */
@property --angle {
  syntax: '<angle>';
  inherits: false;
  initial-value: 0deg;
}

.buttonOutlineGlow {
  @include mixins.buttonBaseStyle;

  position: relative;
  padding: 2px;
  color: variables.$color-white;
  background-color: variables.$color-gray;
  border-radius: calc(64px / 2); /* (buttonの高さ / 2) の値 */

  $button: &;

  &_bg {
    position: absolute;
    top: 0;
    left: 0;
    display: block;
    width: 100%;
    height: 100%;
    background: conic-gradient(from var(--angle), variables.$color-black, variables.$color-gray, variables.$color-black, variables.$color-gray, variables.$color-black);
    border-radius: calc(64px / 2); /* (buttonの高さ / 2) の値 */
    opacity: 0;
    animation: gradient-spin 3s linear 0s infinite;
  }

  @keyframes gradient-spin {
    0% {
      --angle: 0deg;
    }

    100% {
      --angle: 360deg;
    }
  }

  &_item {
    position: relative;
    display: flex;
    align-items: center;
    justify-content: center;
    width: 100%;
    height: 100%;
    background-color: variables.$color-black;
    border-radius: calc(64px / 2); /* (buttonの高さ / 2) の値 */
  }

  @media (any-hover: hover) {
    #{$button}_bg {
      transition: opacity 0.3s linear;
    }

    &:hover,
    &:focus-visible {
      #{$button}_bg {
        opacity: 1;
      }

      background-color: variables.$color-gray;
    }
  }
}
